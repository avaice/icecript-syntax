{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Icecript",
  "patterns": [
    {
      "include": "#strings"
    },
    {
      "include": "#mlstrings"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#reserved"
    },
    {
      "include": "#var_label"
    },
    {
      "include": "#fn"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#vars"
    },
    {
      "include": "#number"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "match": "//.*$",
          "name": "comment"
        }
      ]
    },
    "var_label": {
      "patterns": [
        {
          "name": "storage.type.icecript",
          "match": "\\b(var)\\b"
        }
      ]
    },
    "fn": {
      "patterns": [
        {
          "name": "storage.type.function.icecript",
          "match": "\\b(fn)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.icecript",
          "match": "\\b(if|else|elif|return)\\b"
        }
      ]
    },
    "reserved": {
      "patterns": [
        {
          "name": "variable.other.constant",
          "match": "\\b(true|false|monkey|void)\\b"
        }
      ]
    },
    "functions": {
      "begin": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": {
          "name": "entity.name.function"
        }
      },
      "patterns": [
        {
          "include": "#mlstrings"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#number"
        },
        {
          "include": "#vars"
        },
        {
          "include": "#functions"
        }
      ]
    },

    "vars": {
      "patterns": [
        {
          "name": "variable",
          "match": "[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },

    "number": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.icecript",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.icecript",
          "match": "\\\\."
        }
      ]
    },
    "mlstrings": {
      "name": "string.quoted.multi.icecript",
      "begin": "`",
      "end": "`",
      "patterns": [
        {
          "name": "constant.character.escape.icecript",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.ic"
}
